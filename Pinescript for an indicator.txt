Pinescript for an indicator 

//@version=5
//─────────────────────────────────────────────────────────────────────────────
//  Bollinger-Band Breakout + Parabolic SAR  –  Milestone-1 (COMPILING VERSION)
//─────────────────────────────────────────────────────────────────────────────
strategy("BB Breakout + SAR Trailing Stop (Milestone-1)",
         overlay = true,
         initial_capital = 10000,
         default_qty_type = strategy.percent_of_equity,
         default_qty_value = 100,
         commission_type  = strategy.commission.percent,
         commission_value = 0.04)

// ───────────────────── 1 -- USER INPUTS ─────────────────────
bbLen    = input.int  (20 , "BB Length",       minval = 1)
bbMult   = input.float(2.0, "BB Std-Dev Mult", step = 0.1)

sarStart = input.float(0.02, "SAR Start"    , step = 0.01)
sarInc   = input.float(0.02, "SAR Increment", step = 0.01)
sarMax   = input.float(0.20, "SAR Maximum"  , step = 0.05)

showCurve = input.bool(true, "Show Equity-Curve Pane")

// ───────────────────── 2 -- INDICATORS ─────────────────────
basis  = ta.sma(close, bbLen)
dev    = bbMult * ta.stdev(close, bbLen)
upper  = basis + dev
lower  = basis - dev

psar   = ta.sar(sarStart, sarInc, sarMax)

// ───────────────────── 3 -- ENTRIES / EXITS ────────────────
longCond  = close > upper  and psar < close
shortCond = close < lower  and psar > close

if longCond
    strategy.entry("Long",  strategy.long)
if shortCond
    strategy.entry("Short", strategy.short)

strategy.exit("XL", from_entry = "Long" ,  stop = psar)
strategy.exit("XS", from_entry = "Short",  stop = psar)

// ───────────────────── 4 -- TRADE-METRICS ARRAYS ───────────
var float[] tradePNLArray     = array.new_float()
var int  [] tradeBarExitArray = array.new_int()

// detect a newly closed trade
if strategy.closedtrades > array.size(tradePNLArray)
    int idx     = strategy.closedtrades - 1
    float pnl   = strategy.closedtrades.profit(idx)   // ← corrected call
    int   eBar  = bar_index
    array.push(tradePNLArray,     pnl)
    array.push(tradeBarExitArray, eBar)

// ───────────────────── 5 -- VISUALS ────────────────────────
plot(basis, color=color.orange, title="BB Basis")
pU = plot(upper, color=color.new(color.blue, 0), title="BB Upper")
pL = plot(lower, color=color.new(color.blue, 0), title="BB Lower")
fill(pU, pL, color=color.new(color.blue, 95))

plot(psar, style=plot.style_cross, color=color.fuchsia, title="Parabolic SAR")

plotshape(longCond , title="Long Signal",  location=location.belowbar,
          style=shape.triangleup ,  size=size.tiny, color=color.green)
plotshape(shortCond, title="Short Signal", location=location.abovebar,
          style=shape.triangledown, size=size.tiny, color=color.red)

plot(showCurve ? strategy.equity : na,
     title="Equity Curve",
     color=color.lime)

//─────────────────────────────────────────────────────────────
//  End – Milestone-1 (core strategy, compiles OK)
//  Next: Walk-Forward engine, optimisation & reporting.
//─────────────────────────────────────────────────────────────